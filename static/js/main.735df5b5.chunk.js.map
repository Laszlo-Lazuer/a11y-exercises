{"version":3,"sources":["Pages/Exercise5/img/img_logo.png","Pages/Exercise6/img/img_logo.png","components/Nav/index.jsx","Pages/Home/index.jsx","Pages/Exercise1/index.jsx","Pages/Exercise2/index.jsx","Pages/Exercise3/index.jsx","Pages/Exercise4/index.jsx","Pages/Exercise5/index.jsx","Pages/Exercise6/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","to","process","Home","Exercise1","samplePage","className","style","maxWidth","id","src","width","textAlign","Exercise2","height","Exercise3","useState","hcolor","setHcolor","pcolor","setPcolor","showControls","setShowControls","ColorInput","htmlFor","placeholder","name","onClick","colorFromInput","document","getElementById","value","ChangeHColor","ChangePColor","color","alert","display","Exercise4","fName","setFName","lName","setLName","borderTop","borderRight","borderLeft","marginTop","firstName","lastName","welcome","Exercise5","formExample","method","border","margin","padding","LogoImg","Exercise6","type","fontSize","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.735df5b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img_logo.3a122462.png\";","module.exports = __webpack_public_path__ + \"static/media/img_logo.3a122462.png\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Nav = () => {\n    return <nav>\n        <h2>Homework 1 (Due: 06/12):</h2>\n        <ul>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex1`}>Exercise 1</Link>\n            </li>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex2`}>Exercise 2</Link>\n            </li>\n        </ul>\n        <h2>Homework 2 (Due: 06/19):</h2>\n        <ul>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex3`}>Exercise 3</Link>\n            </li>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex4`}>Exercise 4</Link>\n            </li>\n        </ul>\n        <h2>Homework 3 (Due: 06/26):</h2>\n        <ul>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex5`}>Exercise 5</Link>\n            </li>\n            <li>\n                <Link to={`${process.env.PUBLIC_URL}/ex6`}>Exercise 6</Link>\n            </li>\n        </ul>    </nav>;\n};\n\nexport default Nav;\n","import React, { Fragment } from \"react\";\nimport Nav from \"../../components/Nav\";\n\nconst Home = () => {\n    return <Fragment>\n        <h1>A11y Exercise Portal</h1>\n        <Nav />\n    </Fragment>;\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\n\nconst Exercise1 = () => {\n    const samplePage = <Fragment>\n        <div className=\"w3-content\" style={{maxWidth:\"1100px\"}}>\n            <div className=\"w3-row w3-padding-64\" id=\"menu\">\n                <div className=\"w3-col l6 w3-padding-large\">\n                    <h2 className=\"w3-center\">Our Menu</h2><br />\n                    <h4>Bread Basket</h4>\n                    <p className=\"w3-text-grey\">Assortment of fresh baked fruit breads and muffins 5.50</p><br />\n\n                    <h4>Honey Almond Granola with Fruits</h4>\n                    <p className=\"w3-text-grey\">Natural cereal of honey toasted oats, raisins, almonds and dates 7.00</p><br />\n\n                    <h4>Belgian Waffle</h4>\n                    <p className=\"w3-text-grey\">Vanilla flavored batter with malted flour 7.50</p><br />\n\n                    <h4>Scrambled eggs</h4>\n                    <p className=\"w3-text-grey\">Scrambled eggs, roasted red pepper and garlic, with green onions 7.50</p><br />\n\n                    <h4>Blueberry Pancakes</h4>\n                    <p className=\"w3-text-grey\">With syrup, butter and lots of berries 8.50</p>\n                </div>\n\n                <div className=\"w3-col l6 w3-padding-large\">\n                    <img src=\"https://www.w3schools.com/w3images/tablesetting.jpg\" className=\"w3-round w3-image w3-opacity-min\" style={{width:\"100%\"}} />\n                </div>\n            </div>\n        </div>\n    </Fragment>\n\n    return <Fragment>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 1</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n        </div>\n        {samplePage}\n    </Fragment>;\n};\n\nexport default Exercise1;\n","import React, { Fragment } from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\n\nconst Exercise2 = () => {\n    const samplePage = <Fragment>\n        <div className=\"w3-row w3-padding-64\" id=\"about\">\n            <div className=\"w3-col m6 w3-padding-large w3-hide-small\">\n                <img src=\"https://www.w3schools.com/w3images/tablesetting2.jpg\"\n                     className=\"w3-round w3-image w3-opacity-min\" width=\"600\" height=\"750\" />\n            </div>\n\n            <div className=\"w3-col m6 w3-padding-large\">\n                <h2 className=\"w3-center\">About Catering</h2><br />\n                <h5 className=\"w3-center\">Tradition since 1889</h5>\n                <p className=\"w3-large\">The Catering was founded in blabla by Mr. Smith in lorem ipsum dolor sit amet,\n                    consectetur adipiscing elit consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n                    aliquip ex ea commodo consequat. Duis aute iruredolor in reprehenderit in voluptate velit esse\n                    cillum dolore eu fugiat nulla pariatur.We only use <span\n                        className=\"w3-tag w3-light-grey\">seasonal</span> ingredients.</p>\n                <p className=\"w3-large w3-text-grey w3-hide-medium\">Excepteur sint occaecat cupidatat non proident, sunt\n                    in culpa qui officia deserunt mollit anim id est laborum consectetur adipiscing elit, sed do eiusmod\n                    temporincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n                    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n            </div>\n        </div>\n    </Fragment>;\n\n    return <Fragment>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 2</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n        </div>\n        {samplePage}\n    </Fragment>;\n};\n\nexport default Exercise2;\n","import React, { Fragment, useState } from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\n\nconst Exercise3 = () => {\n    const [hcolor, setHcolor] = useState('#efefef');\n    const [pcolor, setPcolor] = useState('#f2f2f2');\n    const [showControls, setShowControls] = useState(false);\n    const Click = () => {\n        return(\n        alert('Continue!'));\n    };\n\n    const ChangeHColor = () => {\n        const colorFromInput  = document.getElementById('color-set').value;\n        return (setHcolor((colorFromInput !== \"\") ? colorFromInput:hcolor));\n    };\n\n    const ChangePColor = () => {\n        const colorFromInput  = document.getElementById('p-color-set').value;\n        return (setPcolor((colorFromInput !== \"\") ? colorFromInput:hcolor));\n    };\n\n    const ColorInput = (showControls) ? <Fragment>\n        <label htmlFor=\"color-set\">Update H3 Color</label>\n        <input placeholder={'#ffffff'} id={'color-set'} name={'change-color'}/>\n        <button className={'change-color-btn'} onClick={() => ChangeHColor()}>Set Color</button>\n        <br />\n        <label htmlFor=\"p-color-set\">Update text Color</label>\n        <input placeholder={'#ffffff'} id={'p-color-set'} name={'p-change-color'}/>\n        <button className={'change-color-btn'} onClick={() => ChangePColor()}>Set Color</button>\n        <hr />\n    </Fragment>: null;\n\n    const samplePage = <Fragment>\n        <div className=\"w3-content\" style={{maxWidth:\"1100px\"}}>\n            <div className=\"w3-row w3-padding-64\" id=\"menu\">\n                <div className=\"w3-col l6 w3-padding-large\">\n                    <h2 className=\"w3-center\">Our Menu</h2><br />\n                    <p className=\"w3-text-greys\" style={{color: pcolor}}>Assortment of fresh baked fruit breads and muffins 5.50</p><br />\n\n                    <h3 style={{color: hcolor}}>Honey Almond Granola with Fruits</h3>\n                    <p className=\"w3-text-greys\" style={{color: pcolor}}>Natural cereal of honey toasted oats, raisins, almonds and dates 7.00</p><br />\n\n                    <h3 style={{color: hcolor}}>Belgian Waffle</h3>\n                    <p className=\"w3-text-greys\" style={{color: pcolor}}>Vanilla flavored batter with malted flour 7.50</p><br />\n\n                    <h3 style={{color: hcolor}}>Scrambled eggs</h3>\n                    <p className=\"w3-text-greys\" style={{color: pcolor}}>Scrambled eggs, roasted red pepper and garlic, with green onions 7.50</p><br />\n\n                    <h3 style={{color: hcolor}}>Blueberry Pancakes</h3>\n                    <p className=\"w3-text-greys\" style={{color: pcolor}}>With syrup, butter and lots of berries 8.50</p>\n                </div>\n            </div>\n            <div className=\"w3-col l6 w3-padding-large\">\n                <button onClick={() => Click()}>Order</button>\n            </div>\n        </div>\n    </Fragment>;\n\n\n\n    return <Fragment>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 3</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n        </div>\n\n        <div className={'control-wrapper'}>\n            <button style={{display:'block'}} className={'change-color-btn'} onClick={() => setShowControls(!showControls)}>{(!showControls) ? 'Show modifiers':'Hide modifiers'}</button>\n            {ColorInput}\n        </div>\n        {samplePage}\n    </Fragment>;\n};\n\nexport default Exercise3;\n","import React, { Fragment, useState } from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\n\nconst Exercise4 = () => {\n    const [fName, setFName] = useState('');\n    const [lName, setLName] = useState('');\n    const [showControls, setShowControls] = useState(true);\n\n    const ChangePColor = () => {\n        const firstName  = document.getElementById('p-color-set').value;\n        const lastName  = document.getElementById('color-set').value;\n        setFName((firstName !== \"\") ? firstName:fName);\n        setLName((lastName !== \"\") ? lastName:lName);\n        return ;\n    };\n\n    const ColorInput = (showControls) ? <Fragment>\n        <label>First Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Johnny'} id={'p-color-set'} name={'p-change-color'}/>\n        <br />\n        <label>Last Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Appleseed'} id={'color-set'} name={'change-color'}/>\n        <br />\n        <button style={{marginTop: '20px'}} className={'change-color-btn'} onClick={() => ChangePColor()}>{(lName === \"\" && fName === \"\") ? \"Log Name\":\"Saved!\"}</button>\n    </Fragment>: null;\n\n    const welcome = <h3 style={{color: '#4d4d4d'}}>Welcome {fName} {lName}!</h3>;\n\n    return <Fragment>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 4</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n\n\n        <h2 style={{marginTop: '50px'}}>Welcome to our guest book!</h2>\n        <div className={'control-wrapper'}>\n            <h3 style={{color: '#4d4d4d'}}>Please enter your name below:</h3>\n            {ColorInput}\n            {(lName !== \"\" && fName !== \"\") ? welcome:null}\n        </div>\n        </div>\n    </Fragment>;\n};\n\nexport default Exercise4;\n","import React, { Fragment, useState } from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\nimport LogoImg from './img/img_logo.png'\n\nconst Exercise5 = () => {\n    const [fName, setFName] = useState('');\n    const [lName, setLName] = useState('');\n    const [showControls, setShowControls] = useState(true);\n\n    const ChangePColor = () => {\n        const firstName  = document.getElementById('p-color-set').value;\n        const lastName  = document.getElementById('color-set').value;\n        setFName((firstName !== \"\") ? firstName:fName);\n        setLName((lastName !== \"\") ? lastName:lName);\n        return ;\n    };\n\n    const ColorInput = (showControls) ? <Fragment>\n        <label>First Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Johnny'} id={'p-color-set'} name={'p-change-color'}/>\n        <br />\n        <label>Last Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Appleseed'} id={'color-set'} name={'change-color'}/>\n        <br />\n        <button style={{marginTop: '20px'}} className={'change-color-btn'} onClick={() => ChangePColor()}>{(lName === \"\" && fName === \"\") ? \"Log Name\":\"Saved!\"}</button>\n    </Fragment>: null;\n\n    const formExample =\n        <Fragment>\n            <form method=\"post\" style={{border:'1px solid #4f4f4f', width:'370px', margin: '0 auto', textAlign:'right', padding: '1rem'}}>\n                <label htmlFor={'first-name'}>First Name:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Johnny'} id={'first-name'} name={'change-color'}/>\n                <br />\n                <label htmlFor={'last-name'}>Last Name:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Appleseed'}  name={'change-color'}/>\n                <br />\n                <label htmlFor={'shirt-size'}>Shirt Size:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Size'} id={'shirt-size'} name={'change-color'}/>\n                <br />\n                <label htmlFor={'phone-number'}>Phone #:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'000-000-0000'} id={'phone-number'} name={'change-color'}/>\n                <br />\n                <label htmlFor={'address-st'}>Street Address:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'1234 Fake Street'} id={'address-st'} name={'change-color'}/>\n                <br />\n                <label>City:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'El Paso'} name={'change-color'}/>\n                <br />\n                <label htmlFor={'address-state'}>State:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'TX'} id={'first-name'} name={'change-color'}/>\n                <br />\n                <label htmlFor={'first-name'}>Zip:</label>\n                <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'00000'} id={'color-set'} name={'change-color'}/>\n                <br />\n            </form>\n        </Fragment>;\n\n    const welcome = <h3 style={{color: '#4d4d4d'}}>Welcome {fName} {lName}!</h3>;\n\n    return <div>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 6</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n\n            <div style={{marginTop:'50px'}}>\n                <img src={LogoImg}  style={{width:\"30%\"}} />\n                {formExample}\n                <button style={{marginTop: '20px', color: '#107DAC'}} className={'change-color-btn'} onClick={() => alert('Thank you!')}>Submit</button>\n            </div>\n        </div>\n    </div>;\n};\n\nexport default Exercise5;\n","import React, {Fragment, useState} from \"react\";\nimport './styles.scss';\nimport {Link} from \"react-router-dom\";\nimport LogoImg from './img/img_logo.png'\n\nconst Exercise6 = () => {\n    const [fName, setFName] = useState('');\n    const [lName, setLName] = useState('');\n    const [showControls, setShowControls] = useState(true);\n\n    const ChangePColor = () => {\n        const firstName = document.getElementById('p-color-set').value;\n        const lastName = document.getElementById('color-set').value;\n        setFName((firstName !== \"\") ? firstName : fName);\n        setLName((lastName !== \"\") ? lastName : lName);\n        return;\n    };\n\n    const ColorInput = (showControls) ? <Fragment>\n        <label>First Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Johnny'}\n               id={'p-color-set'} name={'p-change-color'}/>\n        <br/>\n        <label>Last Name:</label>\n        <input style={{borderTop: 'none', borderRight: 'none', borderLeft: 'none'}} placeholder={'Appleseed'}\n               id={'color-set'} name={'change-color'}/>\n        <br/>\n        <button style={{marginTop: '20px'}} className={'change-color-btn'}\n                onClick={() => ChangePColor()}>{(lName === \"\" && fName === \"\") ? \"Log Name\" : \"Saved!\"}</button>\n    </Fragment> : null;\n\n    const formExample =\n        <Fragment>\n            <form method=\"post\" style={{width: '370px', margin: '0 auto', textAlign: 'left'}}>\n                <fieldset>\n                    <legend>Select your pizza toppings:</legend>\n                    <input id=\"ham\" type=\"checkbox\" name=\"toppings\" value=\"ham\"/>\n                    <label htmlFor=\"ham\">Ham</label><br/>\n                    <input id=\"pepperoni\" type=\"checkbox\" name=\"toppings\" value=\"pepperoni\"/>\n                    <label htmlFor=\"pepperoni\">Pepperoni</label><br/>\n                    <input id=\"mushrooms\" type=\"checkbox\" name=\"toppings\" value=\"mushrooms\"/>\n                    <label htmlFor=\"mushrooms\">Mushrooms</label><br/>\n                    <input id=\"olives\" type=\"checkbox\" name=\"toppings\" value=\"olives\"/>\n                    <label htmlFor=\"olives\">Olives</label>\n                </fieldset>\n                <br/>\n                <h2 style={{fontSize: '15px'}}>Select your Pizza Size:</h2>\n                <input id=\"small\" type=\"radio\" name=\"shipping\" value=\"small\"/>\n                <label htmlFor=\"small\">Small</label><br/>\n                <input id=\"medium\" type=\"radio\" name=\"medium\" value=\"medium\"/>\n                <label htmlFor=\"medium\">Medium</label><br/>\n                <input id=\"large\" type=\"radio\" name=\"large\" value=\"large\"/>\n                <label htmlFor=\"large\">Large</label>\n            </form>\n        </Fragment>;\n\n    const welcome = <h3 style={{color: '#4d4d4d'}}>Welcome {fName} {lName}!</h3>;\n\n    return <div>\n        <div style={{textAlign: 'center'}}>\n            <h1>Exercise 6</h1>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Return Home</Link>\n            <div style={{marginTop: '50px'}}>\n                <img src={LogoImg} style={{width: \"30%\"}}/>\n                <h4 style={{fontSize: '30px'}}>How would you like your pizza?</h4>\n                {formExample}\n                <button style={{marginTop: '20px'}} className={'change-color-btn'}\n                        onClick={() => alert('Thank you!')}>Submit\n                </button>\n            </div>\n        </div>\n    </div>;\n};\n\nexport default Exercise6;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Home from './Pages/Home/index';\nimport Exercise1 from './Pages/Exercise1/index';\nimport Exercise2 from './Pages/Exercise2/index';\nimport Exercise3 from './Pages/Exercise3/index';\nimport Exercise4 from './Pages/Exercise4/index';\nimport Exercise5 from './Pages/Exercise5/index';\nimport Exercise6 from './Pages/Exercise6/index';\n\nfunction App() {\n  return (\n      <Router>\n        <main>\n          <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/ex1`}>\n              <Exercise1 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/ex2`}>\n              <Exercise2 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/ex3`}>\n              <Exercise3 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/ex4`}>\n              <Exercise4 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/ex5`}>\n              <Exercise5 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/ex6`}>\n              <Exercise6 />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/`}>\n              <Home />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}